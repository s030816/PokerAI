
@using MudBlazor
@using System.Text.Json;
@using CardGame.Pages.Shared.Components;
@inherits LayoutComponentBase

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>


<MudAppBar Color="Color.Primary" Fixed="false">

    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" />
    <MudButton Variant="Variant.Filled" Color="Color.Info">Call</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Secondary">Raise</MudButton>
    <MudButton Variant="Variant.Filled" Color="Color.Info">Fold</MudButton>
    <p>Balance: @gsc.game_state.player_bank.ToString()</p>
    <p>@(((Game_State)gsc.game_state.state).ToString())</p>
    <p>Oponent: @gsc.game_state.opponent_bank.ToString()</p>
    <MudSpacer />
    
    <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" />
</MudAppBar>

@if(gsc.game_state.state == 5)
{
    <MudPaper Class="d-flex justify-center">
    <MudPaper Class="">
        <img src="Assets/@(gsc.game_state.opponent_hand[0]).svg" style="background-color:red; height: 200px;" />
         <img src="Assets/@(gsc.game_state.opponent_hand[1]).svg" style="background-color:red; height: 200px;" />
    </MudPaper>
    </MudPaper>
        <br>
}

<MudPaper Class="d-flex justify-center">
    <MudPaper Class="">
        @for (var i = 0; i < gsc.game_state.state; ++i)
    {
            <img src="Assets/@(gsc.game_state.deck[i]).svg" style="background-color:red;  height: 200px;" />
    }
</MudPaper>
</MudPaper>
<br>
<MudPaper Class="d-flex justify-center">
    <MudPaper Class="">
        <img src="Assets/@(gsc.game_state.player_hand[0]).svg" style="background-color:red; height: 200px;" />
        <img src="Assets/@(gsc.game_state.player_hand[1]).svg" style="background-color:red; height: 200px;" />
</MudPaper>

</MudPaper>

<MudAlert Severity="Severity.Normal" Variant="Variant.Outlined">@gsc.game_state.winning_hand</MudAlert>
<MudAlert Severity="Severity.Normal" Variant="Variant.Outlined">@gsc.game_state.who_won.ToString()</MudAlert>







@code {
    private enum Game_State
    {
        PREFLOP = 0,
        FLOP = 3,
        TURN = 4,
        RIVER = 5
    }
    private int? balance = 0;
    private int? op_balance = 0;
    private int? state = 0;
    //private string? imageSource = "pirmas test";
    private string? displayDeck = "display:none;";
    private GameStateController gsc = new GameStateController();
    private string? message = "testas";
    // @onclick="() => testas()"
    // <MudAlert Severity="Severity.Normal" Variant="Variant.Outlined">@gsc.message</MudAlert>
    private void test()
    {

        //state = (state + 1) % 4;
        displayDeck = "";
    }
}
